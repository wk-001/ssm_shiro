<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns="http://www.springframework.org/schema/beans"
    xmlns:util="http://www.springframework.org/schema/util"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    http://www.springframework.org/schema/beans/spring-beans-4.0.xsd
    http://www.springframework.org/schema/util
    http://www.springframework.org/schema/util/spring-util.xsd">
     
    <!-- 配置shiro的过滤器工厂类，id- shiroFilter要和我们在web.xml中配置的过滤器一致 -->
    <bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
        <!-- 调用我们配置的权限管理器 -->
        <property name="securityManager" ref="securityManager" />
        <!-- 配置我们的登录请求地址 -->
        <property name="loginUrl" value="/login" />
        <!-- 如果您请求的资源不再您的权限范围，则跳转到/403请求地址 -->
        <property name="unauthorizedUrl" value="/unAuthorization" />
        <!-- 退出 -->
        <property name="filters">
            <util:map>
            	<!-- 将自定义 的FormAuthenticationFilter注入shiroFilter中
				<entry key="authc" value-ref="formAuthenticationFilter" />-->
				<!-- 定义退出时访问的路径 -->
                <entry key="logout" value-ref="logoutFilter" />
                <!-- 并发登录人数控制
                <entry key="kickout" value-ref="kickoutSessionControlFilter"/>  -->
            </util:map>
        </property>
        <!-- 权限配置 -->
        <property name="filterChainDefinitions">
            <value>
                <!-- anon表示此地址不需要任何权限即可访问 -->
                /login=anon
                /register=anon
                /index=anon
                /welcome=anon
                /unauthorized = anon 
                /doLogout=logout
                /plugin/** = anon 	<!-- 静态资源文件夹 -->
                <!--所有的请求(除去配置的静态资源请求或请求地址为anon的请求)都要通过登录验证,如果未登录则跳到/login -->
                /admin/**=user,kickout 
            </value>
        </property>
    </bean>
    <!-- 退出过滤器 -->
    <bean id="logoutFilter" class="org.apache.shiro.web.filter.authc.LogoutFilter">
        <property name="redirectUrl" value="/jsp/first.jsp" />
    </bean>
 
 
    <!-- 安全管理器 -->
    <bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager">
        <property name="realm" ref="userRealm" />
        <property name="sessionManager" ref="sessionManager" />  
        <!--<property name="cacheManager" ref="cacheManager" />  -->
        <property name="rememberMeManager" ref="rememberMeManager" /> 
    </bean>
    <!-- 相当于调用SecurityUtils.setSecurityManager(securityManager) -->
    <bean
        class="org.springframework.beans.factory.config.MethodInvokingFactoryBean">
        <property name="staticMethod"
            value="org.apache.shiro.SecurityUtils.setSecurityManager" />
        <property name="arguments" ref="securityManager" />
    </bean>
 
    <!-- 密码匹配器 -->
     <bean id="credentialsMatcher" class="org.apache.shiro.authc.credential.HashedCredentialsMatcher">
         <!--<bean id="credentialsMatcher" class="com.wk.shiro.credentials.RetryLimitHashedCredentialsMatcher">-->
             <property name="hashAlgorithmName" value="md5"/>
             <property name="hashIterations" value="2"/>
             <property name="storedCredentialsHexEncoded" value="true"/>
         </bean>

         <bean id="userRealm" class="com.wk.shiro.UserRealm">
                 <!-- 将上面声明的密码匹配器注入到自定义 Realm 的属性中去 -->
        <property name="credentialsMatcher" ref="credentialsMatcher"/>
        <!-- 配置缓存相关 -->
        <!-- 启用缓存
        <property name="cachingEnabled" value="true" />   -->
        <!-- 开启认证缓存
        <property name="authenticationCachingEnabled" value="true" />   -->
        <!-- 指定认证缓存的名字(与 ehcache.xml 中声明的相同)
        <property name="authenticationCacheName" value="authenticationCache" />   -->
        <!--开启授权缓存
        <property name="authorizationCachingEnabled" value="true" />   -->
        <!-- 指定授权缓存的名字(与 ehcache.xml 中声明的相同)
        <property name="authorizationCacheName" value="authorizationCache" />  -->
    </bean>
     
     <!-- <bean id="formAuthenticationFilter"  
        class="org.apache.shiro.web.filter.authc.FormAuthenticationFilter">  
        表单中账号的input名称
		<property name="usernameParam" value="username" />
		表单中密码的input名称
		<property name="passwordParam" value="password" />
		记住我input的名称
		<property name="rememberMeParam" value="rememberMe"/>  
    </bean>  -->
   
    <!-- shiro为集成springMvc 拦截异常，使用注解时无权限的跳转 -->
	<bean
		class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<!-- 这里你可以根据需要定义N多个错误异常转发 -->
				<prop key="org.apache.shiro.authz.UnauthorizedException">redirect:/unAuthorization</prop>
				<prop key="org.apache.shiro.authz.UnauthenticatedException">redirect:/unAuthorization</prop>
				<!--<prop key="java.lang.IllegalArgumentException">/error</prop>   参数错误(bizError.jsp) -->
				<!--<prop key="java.lang.Exception">/error</prop>   其他错误为'未定义错误'(unknowError.jsp) -->
			</props>
		</property>
	</bean>  
	
	<!-- 缓存配置
	<bean id="cacheManager" class="org.apache.shiro.cache.ehcache.EhCacheManager">  
        <property name="cacheManagerConfigFile" value="classpath:ehcache/ehcache.xml" />  
    </bean> -->
    
    <!-- 会话ID 生成器 -->  
    <bean id="sessionIdGenerator"  
        class="org.apache.shiro.session.mgt.eis.JavaUuidSessionIdGenerator" />  
    <!-- 会话DAO -->  
    <bean id="sessionDAO"  
        class="org.apache.shiro.session.mgt.eis.EnterpriseCacheSessionDAO">  
        <property name="activeSessionsCacheName" value="shiro-activeSessionCache" />  
        <property name="sessionIdGenerator" ref="sessionIdGenerator" />  
    </bean>  
    <!-- 会话验证调度器 sessionValidationInterval：设置调度时间间隔
    <bean id="sessionValidationScheduler"  
        class="org.apache.shiro.session.mgt.quartz.QuartzSessionValidationScheduler">  
        <property name="sessionValidationInterval" value="18000000" />  
        <property name="sessionManager" ref="sessionManager" />  
    </bean>  -->
    <!-- 会话Cookie模板 maxAge=-1 关闭浏览器立即失效-->  
    <bean id="sessionIdCookie" class="org.apache.shiro.web.servlet.SimpleCookie">  
        <constructor-arg value="sid" />  
        <property name="httpOnly" value="true" />  
        <property name="maxAge" value="-1" />  
    </bean>  
    <!-- 记住密码cookie -->  
    <bean id="rememberMeCookie" class="org.apache.shiro.web.servlet.SimpleCookie">  
        <constructor-arg value="rememberMe" />  
        <property name="httpOnly" value="true" />  
        <property name="maxAge" value="2592000" /><!-- 保存时长30天 30*24*60*60 -->  
    </bean>  
    <!-- rememberMe管理器，cipherKey是加密rememberMe Cookie的密钥；默认AES算 -->  
    <bean id="rememberMeManager" class="org.apache.shiro.web.mgt.CookieRememberMeManager">  
        <property name="cipherKey"  
            value="#{T(org.apache.shiro.codec.Base64).decode('4AvVhmFLUs0KTA3Kprsdag==')}" />  
        <property name="cookie" ref="rememberMeCookie" />  
    </bean>  
    
    <!-- 会话管理器 globalSessionTimeout：设置全局会话超时时间，默认30分钟，即如果30分钟内没有访问会话将过期 sessionValidationSchedulerEnabled：是否开启会话验证器，默认是开启的 -->  
    <bean id="sessionManager" class="org.apache.shiro.web.session.mgt.DefaultWebSessionManager">  
        <!-- 相隔多久检查一次session的有效性   -->
	 	<property name="sessionValidationInterval" value="1800000"/>  
	 	 <!-- session 有效时间为半小时 （毫秒单位）--> 
        <property name="globalSessionTimeout" value="1800000" />
        <property name="deleteInvalidSessions" value="true" />  
        <property name="sessionValidationSchedulerEnabled" value="true" />  
        <!--<property name="sessionValidationScheduler" ref="sessionValidationScheduler" /> -->
        <property name="sessionDAO" ref="sessionDAO" />  
        <property name="sessionIdCookieEnabled" value="true" />  
        <property name="sessionIdCookie" ref="sessionIdCookie" />  
    </bean>  
    
    <!-- kickoutSessionControlFilter 用于控制并发登录人数的
    <bean id="kickoutSessionControlFilter"  
        class="com.wk.shiro.KickoutSessionControlFilter">
        <property name="cacheManager" ref="cacheManager" />  
        <property name="sessionManager" ref="sessionManager" />  
        <property name="kickoutAfter" value="false" />  
        <property name="maxSession" value="1" />
        <property name="kickoutUrl" value="/login?kickout=1" />  
    </bean>   -->

    <!-- Shiro 生命周期处理器 -->  
    <bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />  
</beans>